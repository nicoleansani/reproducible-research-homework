<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 14 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:10.0pt;
	margin-left:0in;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{mso-style-link:"Balloon Text Char";
	margin:0in;
	margin-bottom:.0001pt;
	font-size:8.0pt;
	font-family:"Tahoma","sans-serif";}
span.BalloonTextChar
	{mso-style-name:"Balloon Text Char";
	mso-style-link:"Balloon Text";
	font-family:"Tahoma","sans-serif";}
.MsoChpDefault
	{font-family:"Calibri","sans-serif";}
.MsoPapDefault
	{margin-bottom:10.0pt;
	line-height:115%;}
@page WordSection1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;}
div.WordSection1
	{page:WordSection1;}
-->
</style>

</head>

<body lang=EN-US>

<div class=WordSection1>

<p class=MsoNormal>Developing Data Products, Course Project 1</p>

<p class=MsoNormal>Nicole Ansani</p>

<p class=MsoNormal>June 1 2017</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Assignment</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>This assignment will be described in multiple parts. You
will need to write a report that answers the questions detailed below.
Ultimately, you will need to complete the entire assignment in a single R
markdown document that can be processed by knitr and be transformed into an
HTML file.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Throughout your report make sure you always include the code
that you used to generate the output you present. When writing code chunks in
the R markdown document, always use echo = TRUE so that someone else will be
able to read the code. This assignment will be evaluated via peer assessment so
it is essential that your peer evaluators be able to review the code for your
analysis.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>For the plotting aspects of this assignment, feel free to
use any plotting system in R (i.e., base, lattice, ggplot2)</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Fork/clone the GitHub repository created for this
assignment. You will submit this assignment by pushing your completed files
into your forked repository on GitHub. The assignment submission will consist
of the URL to your GitHub repository and the SHA-1 commit ID for your
repository state.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Load the Data:</p>

<p class=MsoNormal>&gt; if (!file.exists(&quot;activity.csv&quot;)) {</p>

<p class=MsoNormal>+     unzip(&quot;activity.zip&quot;)</p>

<p class=MsoNormal>+ }</p>

<p class=MsoNormal>&gt; activity &lt;- read.csv(&quot;activity.csv&quot;)</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Clean the Data:</p>

<p class=MsoNormal>&gt; activity$date &lt;- as.Date(activity$date)</p>

<p class=MsoNormal>&gt; activity$interval &lt;- as.factor(activity$interval)</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Mean total steps taken per day - histogram</p>

<p class=MsoNormal>&gt; library(plyr)</p>

<p class=MsoNormal>&gt; steps_per_day &lt;- ddply(activity, .(date), summarise,
sum = sum(steps, na.rm=T))</p>

<p class=MsoNormal>&gt; steps_per_day</p>

<p class=MsoNormal>         date    sum</p>

<p class=MsoNormal>1  0010-01-20      0</p>

<p class=MsoNormal>2  0010-02-20    126</p>

<p class=MsoNormal>3  0010-03-20  11352</p>

<p class=MsoNormal>4  0010-04-20  12116</p>

<p class=MsoNormal>5  0010-05-20  13294</p>

<p class=MsoNormal>6  0010-06-20  15420</p>

<p class=MsoNormal>7  0010-07-20  11015</p>

<p class=MsoNormal>8  0010-08-20      0</p>

<p class=MsoNormal>9  0010-09-20  12811</p>

<p class=MsoNormal>10 0010-10-20   9900</p>

<p class=MsoNormal>11 0010-11-20  10304</p>

<p class=MsoNormal>12 0010-12-20  17382</p>

<p class=MsoNormal>13 0011-01-20      0</p>

<p class=MsoNormal>14 0011-02-20  10600</p>

<p class=MsoNormal>15 0011-03-20  10571</p>

<p class=MsoNormal>16 0011-04-20      0</p>

<p class=MsoNormal>17 0011-05-20  10439</p>

<p class=MsoNormal>18 0011-06-20   8334</p>

<p class=MsoNormal>19 0011-07-20  12883</p>

<p class=MsoNormal>20 0011-08-20   3219</p>

<p class=MsoNormal>21 0011-09-20      0</p>

<p class=MsoNormal>22 0011-10-20      0</p>

<p class=MsoNormal>23 0011-11-20  12608</p>

<p class=MsoNormal>24 0011-12-20  10765</p>

<p class=MsoNormal>25       &lt;NA&gt; 377469</p>

<p class=MsoNormal>&gt; hist(steps_per_day$sum, ylab=&quot;Number of
Days&quot;, col=&quot;blue&quot;, xlab=&quot;Number of Steps&quot;,
main=&quot;Histogram of Steps Per Day, Oct-Nov 2012&quot;)</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>calculate and report mean total steps per day</p>

<p class=MsoNormal>&gt; mean(steps_per_day$sum)</p>

<p class=MsoNormal>[1] 22824.32</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>calculate and report median total steps per day</p>

<p class=MsoNormal>&gt; median(steps_per_day$sum)</p>

<p class=MsoNormal>[1] 10571</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>what is the average daily activity pattern</p>

<p class=MsoNormal>time series plot of 5-min interval and the ave number of
steps taken then averaged across all days</p>

<p class=MsoNormal>&gt; library(ggplot2)</p>

<p class=MsoNormal>&gt; steps_per_interval &lt;- ddply(activity, .(interval),
summarise, sum = sum(steps, na.rm=T))</p>

<p class=MsoNormal>&gt; p &lt;- ggplot(steps_per_interval, aes(x=interval,
y=sum, group=1)) </p>

<p class=MsoNormal>&gt; p + geom_line() + labs(title = &quot;Average Steps per
Day by 5-min Intervals, Oct-Nov 2012&quot;) + labs(x = &quot;5-minute
Intervals&quot;, y = &quot;Average Number of Steps&quot;)</p>

<p class=MsoNormal>&gt; </p>

<p class=MsoNormal>which 5 min interal on average across all days contains the
max number of steps?</p>

<p class=MsoNormal>&gt; steps_per_interval[
which(steps_per_interval$sum==(max(steps_per_interval$sum))), ]</p>

<p class=MsoNormal>    interval   sum</p>

<p class=MsoNormal>104      835 10927</p>

<p class=MsoNormal>&gt; </p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Imputing missing values</p>

<p class=MsoNormal>calculate and report the total number of missing values in
the dataset</p>

<p class=MsoNormal>&gt; NA_values &lt;- activity[!complete.cases(activity),]</p>

<p class=MsoNormal>&gt; nrow(NA_values)</p>

<p class=MsoNormal>[1] 12384</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>devise a strategy to fill in all missing values in the
dataset using mean for 5 min interval</p>

<p class=MsoNormal>&gt; ##start by calculating mean for each interval</p>

<p class=MsoNormal>&gt; interval_mean &lt;- ddply(activity, .(interval),
summarise, mean = mean(steps, na.rm=T))</p>

<p class=MsoNormal>&gt; ##add that interval as mean for missing values</p>

<p class=MsoNormal>&gt; activity_with_interval_mean &lt;- join(activity, interval_mean)</p>

<p class=MsoNormal>Joining by: interval</p>

<p class=MsoNormal>&gt; ## replace NA values</p>

<p class=MsoNormal>&gt; replace_NA &lt;- function(dataset, variable,
replacement) {</p>

<p class=MsoNormal>+     for (i in 1:nrow(dataset)) {</p>

<p class=MsoNormal>+         if (is.na(dataset[i, variable])) {</p>

<p class=MsoNormal>+                 dataset[i, variable] &lt;- dataset[i,
replacement]</p>

<p class=MsoNormal>+         }</p>

<p class=MsoNormal>+     }</p>

<p class=MsoNormal>+     dataset</p>

<p class=MsoNormal>+ }</p>

<p class=MsoNormal>&gt; ##run that function on the dataset</p>

<p class=MsoNormal>&gt; complete_activity &lt;-
replace_NA(activity_with_interval_mean, variable=1, replacement=4)</p>

<p class=MsoNormal>&gt; </p>

<p class=MsoNormal>&gt; complete_activity &lt;- complete_activity[, -4]</p>

<p class=MsoNormal>&gt; head(complete_activity)</p>

<p class=MsoNormal>      steps       date interval</p>

<p class=MsoNormal>1 1.7169811 0010-01-20        0</p>

<p class=MsoNormal>2 0.3396226 0010-01-20        5</p>

<p class=MsoNormal>3 0.1320755 0010-01-20       10</p>

<p class=MsoNormal>4 0.1509434 0010-01-20       15</p>

<p class=MsoNormal>5 0.0754717 0010-01-20       20</p>

<p class=MsoNormal>6 2.0943396 0010-01-20       25</p>

<p class=MsoNormal>&gt; </p>

<p class=MsoNormal>make a histogram of the total number of steps each day and
calculate and report the mean and median using the imputed data set</p>

<p class=MsoNormal>&gt; complete_steps_per_day &lt;- ddply(complete_activity,
.(date), summarise, sum = sum(steps))</p>

<p class=MsoNormal>&gt; complete_steps_per_day$sum &lt;-
round(complete_steps_per_day$sum)</p>

<p class=MsoNormal>&gt; hist(complete_steps_per_day$sum, ylab=&quot;Number of
Days&quot;, col=&quot;red&quot;, xlab=&quot;Number of Steps&quot;,
main=&quot;Histogram of Steps Per Day, Oct-Nov 2012&quot;)</p>

<p class=MsoNormal>&gt; </p>

<p class=MsoNormal>calculate mean and median total steps per day with imputed
data</p>

<p class=MsoNormal>&gt; mean(steps_per_day$sum)</p>

<p class=MsoNormal>[1] 22824.32</p>

<p class=MsoNormal>&gt; mean(complete_steps_per_day$sum)</p>

<p class=MsoNormal>[1] 26269.44</p>

<p class=MsoNormal>&gt; median(steps_per_day$sum)</p>

<p class=MsoNormal>[1] 10571</p>

<p class=MsoNormal>&gt; median(complete_steps_per_day$sum)</p>

<p class=MsoNormal>[1] 10766</p>

<p class=MsoNormal>&gt; ###do these data differ?</p>

<p class=MsoNormal>&gt; ##yes  the mean and median values are higher with the
imputed data set</p>

<p class=MsoNormal>&gt; &gt; par(mfrow=c(1,2)) </p>

<p class=MsoNormal>&gt; hist(steps_per_day$sum, ylab=&quot;Number of
Days&quot;, col=rgb(1,0,0,0.2), xlab=&quot;Number of Steps&quot;,
main=&quot;Steps Per Day, Excl. NA&quot;)</p>

<p class=MsoNormal>&gt; hist(complete_steps_per_day$sum, ylab=&quot;Number of
Days&quot;, col=rgb(0,0,1,0.2), xlab=&quot;Number of Steps&quot;,
main=&quot;Steps Per Day, Impute NA&quot;)</p>

<p class=MsoNormal>&gt; </p>

<p class=MsoNormal>Are there differences in activity patterns between weekdays
and weekends?</p>

<p class=MsoNormal>use the dataset with the filled in data for this part</p>

<p class=MsoNormal>&gt; complete_activity$dayType &lt;-
ifelse(as.POSIXlt(complete_activity$date)$wday %in% c(0,6),
&quot;weekends&quot;, &quot;weekdays&quot;)</p>

<p class=MsoNormal>&gt; aggregateData &lt;- aggregate(steps~interval + dayType,
data=complete_activity,mean)</p>

<p class=MsoNormal>&gt; ggplot(complete_activity, aes(interval, steps)) +
geom_line() + facet_grid(dayType ~ .) + xlab(&quot;5-minute interval&quot;) +
ylab(&quot;average number of steps&quot;)</p>

<p class=MsoNormal>&gt; </p>

<p class=MsoNormal><img width=689 height=688 id="Picture 1"
src="HW%20june_files/image001.png"><img width=936 height=935 id="Picture 3"
src="HW%20june_files/image002.png"></p>

<p class=MsoNormal><img width=936 height=935 id="Picture 2"
src="HW%20june_files/image003.png"></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><img width=592 height=592 id="Picture 4"
src="HW%20june_files/image004.png"></p>

</div>

</body>

</html>
